{"version":3,"sources":["logo.svg","components/data_visualizer/Chart.js","components/tweet/Tweet.js","components/pages/BrowseHashtag.js","components/pages/Trends.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ReactFC","fcRoot","FusionCharts","PowerCharts","FusionTheme","myDataSource","chart","caption","subCaption","numberPrefix","numberSuffix","yaxismaxvalue","theme","plotToolText","categories","category","dataset","chartConfigs","type","width","height","dataFormat","dataSource","Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","message","tmpPositive","seriesname","color","data","tmpNegative","map","it","push","label","hashTag","value","positiveScore","allowDrag","negativeScore","react_default","a","createElement","ReactFC_default","Component","Tweet","_Component","apply","arguments","inherits","createClass","key","Card","className","Body","Text","body","Footer","id","index_esm","dataApi","tweets","BrowseHashtag","name","console","log","handle","match","params","setState","components_tweet_Tweet","Container","Row","Col","lg","Header","data_visualizer_Chart","Trends","hashTags","d","path","react_router_dom","to","mdbreact_esm","tag","small","muted","App","Navbar","Brand","href","Nav","Link","react_router","exact","component","go_index_esm","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1333c5f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nimport FusionCharts from 'fusioncharts';\nimport PowerCharts from 'fusioncharts/fusioncharts.powercharts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nReactFC.fcRoot(FusionCharts, PowerCharts, FusionTheme);\n\n\nconst myDataSource = {\n  \"chart\": {\n    \"caption\": \"#Hashtags sentiment analysis by percentage.\",\n    \"subCaption\": \"\",\n    \"numberPrefix\": \"%\",\n    \"numberSuffix\": \"\",\n    \"yaxismaxvalue\": \"100\",\n    \"theme\": \"fusion\",\n    \"plotToolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n  },\n  \"categories\": [\n    {\n      \"category\": [\n      ]\n    }\n  ],\n  \"dataset\": [\n  ]\n}\n\nconst chartConfigs = {\n  type: 'dragcolumn2d',\n  width: '100%',\n  height: '100%',\n  dataFormat: 'json',\n  dataSource: myDataSource\n};\n\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: 'Drag any column for years 2017 or 2018 to see updated value along with the label',\n    };\n\n\n  }\n\n  render () {\n    let tmpPositive = {\n          \"seriesname\": \"+ve feelings\",\n          \"color\": \"#009614\",\n          \"data\": [\n            // {\n            //   \"value\": \"-73\",\n            //   \"alpha\": \"100\",\n            //   \"allowDrag\": \"0\"\n            // },\n        ]};\n    let tmpNegative = {\n          \"seriesname\": \"-ve feelings\",\n          \"color\": \"#ed0000\",\n          \"data\": [\n            // {\n            //   \"value\": \"-73\",\n            //   \"alpha\": \"100\",\n            //   \"allowDrag\": \"0\"\n            // },\n        ]};\n\n    myDataSource.categories[0].category = [];\n    myDataSource.dataset = [];\n\n    this.props.data.map((it) => {\n      myDataSource.categories[0].category.push({ \"label\" : it.hashTag});\n      tmpPositive.data.push({\"value\": it.positiveScore, \"allowDrag\": \"0\"});\n      tmpNegative.data.push({\"value\": it.negativeScore, \"allowDrag\": \"0\"});\n    });\n\n    myDataSource.dataset.push(tmpPositive);\n    myDataSource.dataset.push(tmpNegative);\n\n    return (\n      <div>\n        <ReactFC\n          {...chartConfigs}\n          // fcEvent-dataplotDragEnd={this.dataplotDragEnd}\n        />\n      </div>\n    )\n  }\n}\nexport default Chart;\n","import React, { Component } from 'react';\nimport './Tweet.css';\nimport { Card } from 'react-bootstrap';\n\nimport { FaRegFrown, FaRegSmile } from 'react-icons/fa';\n\nexport class Tweet extends Component{\n  render(){\n    return(\n      <Card className=\"tweet\">\n        <Card.Body className=\"tweet-body\">\n          <Card.Text>\n            {this.props.data.body}\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer className=\"cardFooter\">\n          <div id=\"leftbox\">\n            <div className=\"cardPosScore\">\n              <FaRegSmile />\n            </div>\n            <div className=\"cardPosScore\">\n              {this.props.data.positiveScore} %\n            </div>\n          </div>\n          <div id=\"rightbox\">\n            <div className=\"cardNegScore\">\n              <FaRegFrown />\n            </div>\n            <div className=\"cardNegScore\">\n              {this.props.data.negativeScore} %\n            </div>\n          </div>\n        </Card.Footer>\n      </Card>\n    );\n  }\n}\n\nexport default Tweet;\n","import React, { Component } from 'react';\nimport './BrowseHashtag.css';\n\nimport { Container, Row, Col, Card } from 'react-bootstrap';\n// import { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardGroup, MDBContainer } from \"mdbreact\";\n\nimport Tweet from '../tweet/Tweet';\nimport Chart from '../data_visualizer/Chart';\n\nconst dataApi = {\n  \"positiveScore\": \"60\",\n  \"negativeScore\": \"-40\",\n  \"tweets\" : [\n              {\n                \"body\": \"abcdefglenrgfefknae;lrfnerafserkjgn;kjergbekjrgfne,mrfnvvvnlksejbgflvkjsergjbek;afvb;kjeabgesgbhavflkarabcdefglenrgfefknae;lrfnerafserkjgn;kjergbekjrgfne,mrfnvvvnlksejbgflvkjsergjbek;afvb;kjeabgesgbhavflkarabcdefglenrgfefknae;lrfnerafserkjgn;kjergbekjrgfne,mrfnvvvnlksejbgflvkjsergjbek;afvb;kjeabgesgbhavflkarabcdefglenrgfefknae;lrfnerafserkjgn;kjergbekjrgfne,mrfnvvvnlksejbgflvkjsergjbek;afvb;kjeabgesgbhavflkar\",\n                \"positiveScore\": \"10\",\n                \"negativeScore\": \"90\"\n              },\n              {\n                \"body\": \"abcdefglenrgfefknae;lrfnerafserkjgn;kjergbekjrgfne,mrfnvvvnlksejbgflvkjsergjbek;afvb;kjeabgesgbhavflkar\",\n                \"positiveScore\": \"30\",\n                \"negativeScore\": \"70\"\n              },\n              {\n                \"body\": \"abcdefglenrgfefknae;lrfnerafserkjgn;kjergbekjrgfne,mrfnvvvnlksejbgflvkjsergjbek;afvb;kjeabgesgbhavflkarabcdefglenrgfefknae;lrfnerafserkjgn;kjergbekjrgfne,mrfnvvvnlksejbgflvkjsergjbek;afvb;kjeabgesgbhavflkar\",\n                \"positiveScore\": \"60\",\n                \"negativeScore\": \"40\"\n              },\n\n\n  ],\n};\n\nexport class BrowseHashtag extends Component {\n  constructor(props) {\n        super();\n        this.state = {\n            name : \"\",\n            data: dataApi,\n\n        };\n    console.log(this.props);\n    }\n\n    componentDidMount() {\n      const { handle } = this.props.match.params;\n      this.setState({name: handle});\n }\n\n\n  render() {\n    const tweets =  this.state.data.tweets.map((it) => {\n      return <Tweet data={it}/>;\n    })\n\n    return(\n          <Container>\n            <Row>\n              <Col lg={6}>\n                <div className=\"tweets\">\n                  <Card className=\"mainCard scrollbar-primary\">\n                    <Card.Header>\n                      <h5>{this.state.name}</h5>\n                    </Card.Header>\n                    <Card.Body>\n                          {tweets}\n                    </Card.Body>\n                  </Card>\n\n                </div>\n              </Col>\n              <Col lg={6}>\n                <div className=\"graph\">\n                  <Chart data={\n                    [{\"hashTag\": this.state.name,\n                      \"positiveScore\": this.state.data.positiveScore,\n                      \"negativeScore\": this.state.data.negativeScore\n                    }]}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </Container>\n    );\n  }\n}\n\nexport default BrowseHashtag\n","import React, { Component } from 'react';\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport './Trends.css'\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardGroup, MDBContainer } from \"mdbreact\";\n\nimport Chart from '../data_visualizer/Chart'\nimport BrowseHashtag from './BrowseHashtag'\n\n\nconst dataApi = [\n                 {\"hashTag\": \"abc\", \"positiveScore\": \"76\", \"negativeScore\": \"-24\"},\n                 {\"hashTag\": \"def\", \"positiveScore\": \"90\", \"negativeScore\": \"-10\"},\n                 {\"hashTag\": \"ghi\", \"positiveScore\": \"70\", \"negativeScore\": \"-30\"},\n                 {\"hashTag\": \"jkl\", \"positiveScore\": \"60\", \"negativeScore\": \"-40\"},\n                 {\"hashTag\": \"mno\", \"positiveScore\": \"10\", \"negativeScore\": \"-90\"},\n                ]\n\n\nexport class Trends extends Component {\n  constructor(props) {\n        super();\n        this.state = {\n            data: dataApi,\n\n        };\n    }\n\n\n  render() {\n\n    const hashTags = this.state.data.map((d) => {\n        const path = \"/BH/\" + d.hashTag;\n        return <li><Link to={path}>{d.hashTag}</Link></li>\n    })\n\n    return(\n      <MDBContainer>\n          <Container>\n            <Row>\n              <Col lg={3}>\n                <MDBCard className=\"trending\">\n                  <MDBCardBody>\n                    <MDBCardTitle tag=\"h5\">Trending hashtags</MDBCardTitle>\n                    <MDBCardText>\n                      <ul>\n                        {hashTags}\n                      </ul>\n                    </MDBCardText>\n                    <MDBCardText small muted>\n                      Last updated 3 mins ago\n                    </MDBCardText>\n                  </MDBCardBody>\n                </MDBCard>\n              </Col>\n              <Col lg={9}>\n                <Chart data={this.state.data}/>\n              </Col>\n            </Row>\n          </Container>\n      </MDBContainer>\n    );\n  }\n}\n\nexport default Trends\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { Navbar, Nav, NavItem, Dropdown, Container} from 'react-bootstrap';\n\n\nimport Trends from './components/pages/Trends'\nimport BrowseHashtag from './components/pages/BrowseHashtag'\n\nimport {GoMarkGithub} from \"react-icons/go\";\n\nexport class App extends Component {\n  render(){\n    return(\n      <body>\n        <header>\n          <Container>\n            <Navbar>\n              <Navbar.Brand href=\"/\">Twemo</Navbar.Brand>\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/\">Home</Nav.Link>\n              </Nav>\n            </Navbar>\n          </Container>\n        </header>\n        <main>\n          <Router>\n            <Route exact path=\"/\" component={Trends} />\n            <Route exact path=\"/BH/:handle\" component={BrowseHashtag} />\n          </Router>\n        </main>\n        <footer>\n          <h4>\n            <a className=\"github-link\" href=\"https://www.github.com\"><GoMarkGithub/></a>\n          </h4>\n        </footer>\n      </body>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}